#!/usr/bin/env bash

(return 0 2>/dev/null) || echo "GGLIB include MUST BE SOURCED !!!!!"

declare -g GGLIB_DIR=$( dirname  "${BASH_SOURCE[0]}" )
[ -z "$GGLIB_DIR" ] && echo "gglib include should be sourced using path" >&2 && exit 1
GGLIB_DIR=$( realpath -e "${GGLIB_DIR}" )

[ -z "${GGLIB_INCLUDED}" ] && declare -g GGLIB_INCLUDED=""

gglib_include()
{
  if [ "$1" = "all" ]
  then
    source ${GGLIB_DIR}/include all # Callback to process all libs
    return 0
  fi
  
  while [ -n "$1" ]
  do
    local _lib="$1"
    shift
    ( echo " ${GGLIB_INCLUDED} " | grep -F -q " ${_lib} " 2>/dev/null ) && continue # already included
    [[ "${VERBOSE}" =~ ^[0-9]+$ ]] && [ ${VERBOSE} -ge 9 ]  && echo "  including library $_lib..."
    GGLIB_INCLUDED="${GGLIB_INCLUDED} ${_lib}"
    source "${GGLIB_DIR}/l.d/${_lib}.lib"
  done
}

while read _gglib
do
  _gglibname=$( basename "$_gglib" ) 
  _gglibname="${_gglibname%.lib}"
  [ "$1" = "all" ] && gglib_include "${_gglibname}"
  ( echo " $* " | grep -F -q " ${_gglibname} " 2>/dev/null ) && gglib_include "${_gglibname}"  
done < <( find "${GGLIB_DIR}/l.d" -maxdepth 1 -name "*.lib" )

unset _gglib
unset _gglibname    
